import React, { useState, useEffect, useRef } from 'react'
import { WeeklyProgress } from './WeeklyProgress'
import { useSupabaseAuth } from './SupabaseAuthProvider'
import { prayerService } from '../services/prayerService'
import ProgressService from '../services/ProgressService'

interface PrayerTimePageProps {
  onNavigate?: (page: string) => void;
  userPlan?: {
    prayerTime: number;
    bibleTime: number;
    prayerStyle: string;
    prayerFocus: string[];
    bibleTopics: string[];
    customPlan?: {
      prayer: {
        title: string;
        description: string;
        duration: number;
        focus: string[];
        style: string;
        tips: string[];
      };
      reading: {
        title: string;
        description: string;
        duration: number;
        topics: string[];
        approach: string;
        tips: string[];
      };
      reflection: {
        title: string;
        description: string;
        duration: number;
        method: string;
        prompts: string[];
        tips: string[];
      };
    };
  } | null;
}

export const PrayerTimePage: React.FC<PrayerTimePageProps> = ({ onNavigate, userPlan }) => {
  const [todayProgress, setTodayProgress] = useState({
    prayer: 0,
    bible: 0,
    meditation: 0
  })
  const [prayerProgress, setPrayerProgress] = useState({
    currentStreak: 0,
    totalPrayers: 0,
    currentLevel: 'beginner',
    daysThisMonth: 0
  })
  const [loading, setLoading] = useState(true)
  const [hoveredCard, setHoveredCard] = useState<string | null>(null)
  const [scrollY, setScrollY] = useState(0)
  const [showPrayerTimer, setShowPrayerTimer] = useState(false)
  const [selectedMinutes, setSelectedMinutes] = useState(10)
  const [currentEncouragingTitle, setCurrentEncouragingTitle] = useState(0)
  const [timeRemaining, setTimeRemaining] = useState(0)
  const [isTimerRunning, setIsTimerRunning] = useState(false)
  const containerRef = useRef<HTMLDivElement>(null)
  const { user } = useSupabaseAuth()

  useEffect(() => {
    const handleScroll = () => setScrollY(window.scrollY)
    window.addEventListener('scroll', handleScroll)
    return () => window.removeEventListener('scroll', handleScroll)
  }, [])

  // Add keyboard support for closing modal
  useEffect(() => {
    const handleKeyDown = (e: KeyboardEvent) => {
      if (e.key === 'Escape' && showPrayerTimer) {
        console.log('Closing modal via Escape key')
        setShowPrayerTimer(false)
      }
    }

    if (showPrayerTimer) {
      document.addEventListener('keydown', handleKeyDown)
      // Prevent body scroll when modal is open
      document.body.style.overflow = 'hidden'
      document.body.style.paddingRight = '0px' // Prevent layout shift
    }

    return () => {
      document.removeEventListener('keydown', handleKeyDown)
      document.body.style.overflow = 'unset'
      document.body.style.paddingRight = 'unset'
    }
  }, [showPrayerTimer])

  // Encouraging titles that rotate during prayer
  const encouragingTitles = [
    "Find Peace in His Presence",
    "Trust in His Perfect Love",
    "Be Still and Know He is God",
    "Pray Without Ceasing",
    "Cast Your Cares on Him",
    "Walk by Faith",
    "Rejoice Always",
    "Give Thanks in Everything",
    "Seek First His Kingdom",
    "Rest in His Grace"
  ]

  // Rotate encouraging titles during prayer
  useEffect(() => {
    if (showPrayerTimer && isTimerRunning) {
      const interval = setInterval(() => {
        setCurrentEncouragingTitle((prev) => (prev + 1) % encouragingTitles.length)
      }, 8000) // Change every 8 seconds
      return () => clearInterval(interval)
    }
  }, [showPrayerTimer, isTimerRunning, encouragingTitles.length])

  // Countdown timer functionality
  useEffect(() => {
    let interval: NodeJS.Timeout

    if (showPrayerTimer && isTimerRunning && timeRemaining > 0) {
      interval = setInterval(() => {
        setTimeRemaining((prev) => {
          if (prev <= 1) {
            setIsTimerRunning(false)
            // Prayer completed - could add completion logic here
            return 0
          }
          return prev - 1
        })
      }, 1000)
    }

    return () => {
      if (interval) clearInterval(interval)
    }
  }, [showPrayerTimer, isTimerRunning, timeRemaining])

  // Start timer when modal opens
  useEffect(() => {
    if (showPrayerTimer && !isTimerRunning) {
      setTimeRemaining(selectedMinutes * 60)
      setIsTimerRunning(true)
    }
  }, [showPrayerTimer, selectedMinutes, isTimerRunning])

  // Pause timer when modal closes
  useEffect(() => {
    if (!showPrayerTimer) {
      setIsTimerRunning(false)
    }
  }, [showPrayerTimer])

  useEffect(() => {
    const loadTodayProgress = async () => {
      try {
        setLoading(true)

        const sessions = await prayerService.getPrayerSessions()
        const today = new Date()
        today.setHours(0, 0, 0, 0)

        const todaySessions = sessions.filter(session => {
          const sessionDate = new Date(session.date)
          sessionDate.setHours(0, 0, 0, 0)
          return sessionDate.getTime() === today.getTime()
        })

        const todayPrayerMinutes = todaySessions.reduce((total, session) => total + session.duration, 0)

        // Load streak and other progress data from ProgressService
        if (user?.id) {
          try {
            const weekStart = new Date()
            weekStart.setDate(weekStart.getDate() - weekStart.getDay())
            const weekStartStr = weekStart.toISOString().split('T')[0]

            const weeklyData = await ProgressService.getWeeklyProgress(user.id, weekStartStr)

            // Calculate current streak
            const today = new Date()
            let currentStreak = 0

            for (let i = 0; i < 7; i++) {
              const checkDate = new Date(today)
              checkDate.setDate(today.getDate() - i)
              const dayData = weeklyData.dailyProgress[checkDate.toLocaleDateString('en-US', { weekday: 'short' })]
              if (dayData && (dayData.prayer > 0 || dayData.bible > 0 || dayData.meditation > 0)) {
                currentStreak++
              } else {
                break
              }
            }

            // Calculate prayer stats from weekly data
            const totalPrayers = Object.values(weeklyData.dailyProgress).reduce((sum, day) => sum + day.prayer, 0)
            const daysActive = Object.values(weeklyData.dailyProgress).filter(day => day.prayer > 0).length

            setPrayerProgress({
              currentStreak,
              totalPrayers,
              currentLevel: currentStreak > 30 ? 'advanced' : currentStreak > 14 ? 'intermediate' : 'beginner',
              daysThisMonth: daysActive
            })

          } catch (error) {
            console.error('Error loading progress data:', error)
            setPrayerProgress({
              currentStreak: todayPrayerMinutes > 0 ? 1 : 0,
              totalPrayers: todaySessions.length,
              currentLevel: 'beginner',
              daysThisMonth: todayPrayerMinutes > 0 ? 1 : 0
            })
          }
        }

        setTodayProgress({
          prayer: todayPrayerMinutes,
          bible: 0,
          meditation: 0
        })

      } catch (error) {
        console.error('Error loading today progress:', error)
      } finally {
        setLoading(false)
      }
    }

    loadTodayProgress()
  }, [user])

  return (
    <div ref={containerRef} className="min-h-screen bg-black text-white relative overflow-hidden">

      {/* Advanced Background Effects - Osmo Inspired */}
      <div className="absolute inset-0 pointer-events-none">
        {/* Dynamic gradient orbs */}
        <div className="absolute top-20 left-10 w-40 h-40 bg-gradient-to-r from-amber-400/20 to-yellow-400/20 rounded-full blur-3xl animate-pulse opacity-60" style={{
          animationDuration: '4s',
          transform: `translateY(${scrollY * 0.1}px)`
        }}></div>
        <div className="absolute top-40 right-20 w-32 h-32 bg-gradient-to-r from-purple-400/20 to-blue-400/20 rounded-full blur-2xl animate-pulse opacity-50" style={{
          animationDuration: '5s',
          animationDelay: '1s',
          transform: `translateY(${scrollY * -0.05}px)`
        }}></div>
        <div className="absolute bottom-40 left-1/4 w-28 h-28 bg-gradient-to-r from-pink-400/20 to-red-400/20 rounded-full blur-2xl animate-pulse opacity-40" style={{
          animationDuration: '6s',
          animationDelay: '2s',
          transform: `translateY(${scrollY * 0.08}px)`
        }}></div>

        {/* Interactive floating elements */}
        <div className="absolute top-1/3 right-1/4 w-2 h-2 bg-amber-400/60 rounded-full animate-bounce" style={{
          animationDuration: '3s',
          animationDelay: '0.5s'
        }}></div>
        <div className="absolute bottom-1/3 left-1/3 w-1.5 h-1.5 bg-purple-400/60 rounded-full animate-bounce" style={{
          animationDuration: '4s',
          animationDelay: '1.5s'
        }}></div>
        <div className="absolute top-2/3 right-1/3 w-1 h-1 bg-blue-400/60 rounded-full animate-bounce" style={{
          animationDuration: '2.5s',
          animationDelay: '2.5s'
        }}></div>
      </div>

      {/* Hero Section - Osmo Style */}
      <div className="relative z-10 pt-24 pb-16">
        <div className="max-w-7xl mx-auto px-4">
          {/* Premium Hero Card */}
          <div className="text-center mb-16">
            <div className="inline-flex items-center px-6 py-2 rounded-full bg-gradient-to-r from-yellow-400/20 to-amber-400/20 border border-yellow-400/30 backdrop-blur-sm mb-6">
              <div className="w-2 h-2 bg-gradient-to-r from-yellow-400 to-amber-400 rounded-full animate-pulse mr-3"></div>
              <span className="text-yellow-300 font-medium text-sm tracking-wide">üïäÔ∏è SACRED MOMENTS</span>
            </div>

            <h1 className="text-4xl md:text-7xl font-black mb-6 bg-gradient-to-r from-yellow-200 via-amber-200 to-yellow-300 bg-clip-text text-transparent leading-tight">
              üïäÔ∏è My Prayer Time
            </h1>
            <p className="text-xl md:text-2xl text-slate-200 mb-8 max-w-3xl mx-auto leading-relaxed">
              Your sacred conversation with the Divine.
              <span className="text-yellow-400 font-semibold"> Transform your heart</span> through intentional prayer.
            </p>

            {/* Premium CTA Button - BIGGER & MORE ENCOURAGING */}
            <div className="flex flex-col gap-6 justify-center items-center">
              <button
                onClick={() => setShowPrayerTimer(true)}
                className="group relative px-12 py-6 bg-gradient-to-r from-yellow-400 via-amber-400 to-yellow-500 rounded-3xl font-black text-2xl text-black shadow-2xl shadow-yellow-400/40 hover:shadow-yellow-400/60 transform hover:scale-110 transition-all duration-500 overflow-hidden"
              >
                <div className="absolute inset-0 bg-gradient-to-r from-amber-300 to-yellow-300 opacity-0 group-hover:opacity-100 transition-opacity duration-500"></div>
                <div className="relative flex items-center space-x-4">
                  <span className="text-3xl animate-bounce">üïäÔ∏è</span>
                  <span className="tracking-wide">Begin Your Sacred Prayer Journey</span>
                  <svg className="w-7 h-7 group-hover:translate-x-2 transition-transform duration-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={3} d="M13 7l5 5m0 0l-5 5m5-5H6" />
                  </svg>
                </div>
                <div className="absolute inset-0 rounded-3xl border-2 border-yellow-300/50 group-hover:border-yellow-200/80 transition-colors duration-500"></div>
              </button>

              {/* Duration Selector */}
              <div className="flex items-center space-x-3 bg-slate-800/50 rounded-2xl p-2 border border-slate-700/50">
                <span className="text-yellow-300 text-sm font-semibold px-3">Choose Duration:</span>
                {[5, 10, 15, 20].map((minutes) => (
                  <button
                    key={minutes}
                    onClick={() => setSelectedMinutes(minutes)}
                    className={`px-4 py-2 rounded-xl text-sm font-bold transition-all duration-300 ${
                      selectedMinutes === minutes
                        ? 'bg-yellow-400 text-black shadow-lg shadow-yellow-400/50'
                        : 'bg-slate-700/50 text-slate-300 hover:bg-slate-600/50 hover:text-yellow-300'
                    }`}
                  >
                    {minutes} min
                  </button>
                ))}
              </div>
            </div>
          </div>

          {/* Interactive Stats Grid - With Real SVG Icons */}
          <div className="grid grid-cols-2 md:grid-cols-4 gap-6 mb-16">
            {[
              {
                icon: (
                  <svg className="w-12 h-12" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M17.657 18.657A8 8 0 016.343 7.343S7 9 9 10c0-2 .5-5 2.986-7C14 5 16.09 5.777 17.656 7.343A7.975 7.975 0 0120 13a7.975 7.975 0 01-2.343 5.657z"/>
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9.879 16.121A3 3 0 1012.015 11L11 14H9c0 .768.293 1.536.879 2.121z"/>
                  </svg>
                ),
                value: prayerProgress.currentStreak,
                label: 'Day Streak',
                color: 'from-orange-400 to-red-400',
                bgColor: 'from-orange-400/10 to-red-400/10'
              },
              {
                icon: (
                  <svg className="w-12 h-12" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.746 0 3.332.477 4.5 1.253v13C19.832 18.477 18.246 18 16.5 18c-1.746 0-3.332.477-4.5 1.253"/>
                  </svg>
                ),
                value: prayerProgress.totalPrayers,
                label: 'Prayers Done',
                color: 'from-blue-400 to-cyan-400',
                bgColor: 'from-blue-400/10 to-cyan-400/10'
              },
              {
                icon: prayerProgress.currentLevel === 'beginner' ? (
                  <svg className="w-12 h-12" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M5 3v4M3 5h4M6 17v4m-2-2h4m5-16l2.286 6.857L21 12l-5.714 2.143L13 21l-2.286-6.857L5 12l5.714-2.143L13 3z"/>
                  </svg>
                ) : prayerProgress.currentLevel === 'intermediate' ? (
                  <svg className="w-12 h-12" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z"/>
                  </svg>
                ) : (
                  <svg className="w-12 h-12" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 12l2 2 4-4M7.835 4.697a3.42 3.42 0 001.946-.806 3.42 3.42 0 014.438 0 3.42 3.42 0 001.946.806 3.42 3.42 0 013.138 3.138 3.42 3.42 0 00.806 1.946 3.42 3.42 0 010 4.438 3.42 3.42 0 00-.806 1.946 3.42 3.42 0 01-3.138 3.138 3.42 3.42 0 00-1.946.806 3.42 3.42 0 01-4.438 0 3.42 3.42 0 00-1.946-.806 3.42 3.42 0 01-3.138-3.138 3.42 3.42 0 00-.806-1.946 3.42 3.42 0 010-4.438 3.42 3.42 0 00.806-1.946 3.42 3.42 0 013.138-3.138z"/>
                  </svg>
                ),
                value: prayerProgress.currentLevel,
                label: 'Prayer Level',
                color: 'from-purple-400 to-pink-400',
                bgColor: 'from-purple-400/10 to-pink-400/10'
              },
              {
                icon: (
                  <svg className="w-12 h-12" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"/>
                  </svg>
                ),
                value: prayerProgress.daysThisMonth,
                label: 'This Month',
                color: 'from-green-400 to-emerald-400',
                bgColor: 'from-green-400/10 to-emerald-400/10'
              }
            ].map((stat, index) => (
              <div
                key={index}
                className="group relative overflow-hidden bg-gradient-to-br from-white/5 to-white/10 backdrop-blur-xl rounded-2xl p-6 border border-white/10 hover:border-white/20 transition-all duration-500 hover:scale-105 hover:shadow-2xl hover:shadow-white/10"
                style={{
                  animationDelay: `${index * 100}ms`,
                  transform: `translateY(${scrollY * 0.02}px)`
                }}
              >
                <div className="absolute inset-0 bg-gradient-to-br opacity-0 group-hover:opacity-100 transition-opacity duration-300"
                     style={{ background: `linear-gradient(135deg, ${stat.bgColor.split(' ')[0]}, ${stat.bgColor.split(' ')[1]})` }}></div>
                <div className="relative z-10">
                  <div className={`mb-3 text-slate-300 group-hover:text-white transition-colors duration-300 ${stat.color.split(' ')[0].replace('from-', 'text-').replace('-400', '-500')}`}>
                    {stat.icon}
                  </div>
                  <div className={`text-3xl font-black bg-gradient-to-r ${stat.color} bg-clip-text text-transparent mb-1`}>
                    {typeof stat.value === 'string' ? stat.value.charAt(0).toUpperCase() + stat.value.slice(1) : stat.value}
                  </div>
                  <div className="text-slate-400 text-sm font-medium">{stat.label}</div>
                </div>
              </div>
            ))}
          </div>
        </div>
      </div>

      {/* Interactive Cards Section - Osmo Inspired */}
      <div className="relative z-10 pb-16">
        <div className="max-w-7xl mx-auto px-4">
          <div className="text-center mb-12">
            <h2 className="text-3xl md:text-5xl font-black mb-4 bg-gradient-to-r from-white to-slate-300 bg-clip-text text-transparent">
              Your Prayer Journey
            </h2>
            <p className="text-slate-400 text-lg max-w-2xl mx-auto">
              Discover the depth of God's love through these sacred practices
            </p>
          </div>

          {/* Staggered Card Grid */}
          <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
            {[
              {
                icon: 'üôè',
                title: 'Daily Prayer',
                description: 'Connect with God through heartfelt prayer and conversation',
                color: 'from-amber-400 to-yellow-400',
                bgColor: 'from-amber-400/5 to-yellow-400/5',
                borderColor: 'border-amber-400/20',
                hoverBorder: 'group-hover:border-amber-400/40',
                delay: 0
              },
              {
                icon: 'üìù',
                title: 'Reflection',
                description: 'Take time to reflect on God\'s word and His presence',
                color: 'from-purple-400 to-pink-400',
                bgColor: 'from-purple-400/5 to-pink-400/5',
                borderColor: 'border-purple-400/20',
                hoverBorder: 'group-hover:border-purple-400/40',
                delay: 100
              },
              {
                icon: 'üë•',
                title: 'Community',
                description: 'Share and grow with fellow believers in faith',
                color: 'from-blue-400 to-cyan-400',
                bgColor: 'from-blue-400/5 to-cyan-400/5',
                borderColor: 'border-blue-400/20',
                hoverBorder: 'group-hover:border-blue-400/40',
                delay: 200
              },
              {
                icon: 'üìñ',
                title: 'Sacred Scripture',
                description: 'Dive deep into God\'s living word and wisdom',
                color: 'from-green-400 to-emerald-400',
                bgColor: 'from-green-400/5 to-emerald-400/5',
                borderColor: 'border-green-400/20',
                hoverBorder: 'group-hover:border-green-400/40',
                delay: 300
              },
              {
                icon: 'üí≠',
                title: 'Spiritual Insight',
                description: 'Gain wisdom from spiritual leaders and thinkers',
                color: 'from-indigo-400 to-purple-400',
                bgColor: 'from-indigo-400/5 to-purple-400/5',
                borderColor: 'border-indigo-400/20',
                hoverBorder: 'group-hover:border-indigo-400/40',
                delay: 400
              },
              {
                icon: 'üïäÔ∏è',
                title: 'Prayer Journey',
                description: 'Your sacred conversation and communion with God',
                color: 'from-rose-400 to-pink-400',
                bgColor: 'from-rose-400/5 to-pink-400/5',
                borderColor: 'border-rose-400/20',
                hoverBorder: 'group-hover:border-rose-400/40',
                delay: 500
              }
            ].map((card, index) => (
              <div
                key={index}
                className={`group relative overflow-hidden bg-gradient-to-br ${card.bgColor} backdrop-blur-xl rounded-3xl p-8 border ${card.borderColor} ${card.hoverBorder} transition-all duration-500 hover:scale-105 hover:shadow-2xl hover:-translate-y-2 cursor-pointer`}
                style={{
                  animationDelay: `${card.delay}ms`,
                  transform: `translateY(${scrollY * 0.01}px)`
                }}
                onMouseEnter={() => setHoveredCard(card.title)}
                onMouseLeave={() => setHoveredCard(null)}
              >
                {/* Animated background gradient */}
                <div className="absolute inset-0 bg-gradient-to-br opacity-0 group-hover:opacity-100 transition-opacity duration-500"
                     style={{ background: `linear-gradient(135deg, ${card.color.split(' ')[0]}, ${card.color.split(' ')[1]})` }}></div>

                {/* Floating particles */}
                <div className="absolute top-4 right-4 w-2 h-2 bg-white/30 rounded-full animate-ping" style={{animationDelay: `${card.delay + 500}ms`}}></div>
                <div className="absolute bottom-6 left-6 w-1 h-1 bg-white/20 rounded-full animate-ping" style={{animationDelay: `${card.delay + 1000}ms`}}></div>

                <div className="relative z-10">
                  <div className="text-5xl mb-4 group-hover:scale-110 transition-transform duration-300">{card.icon}</div>
                  <h3 className="text-xl font-bold text-white mb-3 group-hover:text-transparent group-hover:bg-gradient-to-r group-hover:bg-clip-text transition-all duration-300"
                      style={{ background: `linear-gradient(135deg, ${card.color.split(' ')[0]}, ${card.color.split(' ')[1]})` }}>
                    {card.title}
                  </h3>
                  <p className="text-slate-300 text-sm leading-relaxed group-hover:text-slate-200 transition-colors duration-300">
                    {card.description}
                  </p>

                  {/* Interactive arrow */}
                  <div className="absolute bottom-6 right-6 opacity-0 group-hover:opacity-100 transition-all duration-300 transform translate-x-2 group-hover:translate-x-0">
                    <svg className="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M17 8l4 4m0 0l-4 4m4-4H3" />
                    </svg>
                  </div>
                </div>
              </div>
            ))}
          </div>
        </div>
      </div>

      {/* Sacred Scripture Section - Premium Design */}
      <div className="relative z-10 py-16">
        <div className="max-w-4xl mx-auto px-4">
          <div className="bg-gradient-to-br from-amber-400/10 via-yellow-400/10 to-orange-400/10 backdrop-blur-xl rounded-3xl p-8 md:p-12 border border-amber-400/20 shadow-2xl">
            <div className="text-center mb-8">
              <div className="inline-flex items-center px-4 py-2 rounded-full bg-gradient-to-r from-amber-400/20 to-yellow-400/20 border border-amber-400/30 mb-6">
                <span className="text-amber-300 text-sm font-medium">üìñ DIVINE WISDOM</span>
              </div>
              <h3 className="text-2xl md:text-3xl font-bold text-white mb-4">Today's Sacred Scripture</h3>
            </div>

            <div className="text-center">
              <blockquote className="text-xl md:text-2xl font-light text-slate-200 italic mb-6 leading-relaxed">
                "If we confess our sins, he is faithful and just and will forgive us our sins and purify us from all unrighteousness."
              </blockquote>
              <cite className="text-amber-400 font-semibold text-lg">- 1 John 1:9</cite>
            </div>

            <div className="mt-8 pt-8 border-t border-amber-400/20">
              <div className="flex items-center justify-center space-x-2 text-slate-400">
                <span className="text-lg">üí≠</span>
                <span className="font-medium">Spiritual Insight:</span>
              </div>
              <p className="text-center text-slate-300 mt-3 italic">
                "The pleasures of the world are deceitful; they promise more than they give." - Jonathan Edwards
              </p>
            </div>
          </div>
        </div>
      </div>

      {/* Weekly Progress Section - Enhanced */}
      <div className="relative z-10 py-16">
        <div className="max-w-7xl mx-auto px-4">
          <div className="text-center mb-12">
            <div className="inline-flex items-center px-6 py-2 rounded-full bg-gradient-to-r from-blue-400/10 to-purple-400/10 border border-blue-400/20 backdrop-blur-sm mb-6">
              <div className="w-2 h-2 bg-gradient-to-r from-blue-400 to-purple-400 rounded-full animate-pulse mr-3"></div>
              <span className="text-blue-300 font-medium text-sm tracking-wide">üìä SPIRITUAL GROWTH</span>
            </div>
            <h2 className="text-3xl md:text-5xl font-black mb-4 bg-gradient-to-r from-white to-slate-300 bg-clip-text text-transparent">
              Your Weekly Progress
            </h2>
            <p className="text-slate-400 text-lg max-w-2xl mx-auto">
              Track your spiritual journey with detailed insights and celebrate your growth
            </p>
          </div>

          <div className="bg-gradient-to-br from-slate-800/20 to-slate-900/20 backdrop-blur-xl rounded-3xl p-6 md:p-8 border border-slate-700/30 shadow-2xl hover:bg-slate-800/30 transition-all duration-500">
            {/* Weekly Progress Component */}
            <div className="text-center py-8">
              <div className="text-4xl mb-4">üìä</div>
              <h3 className="text-xl font-bold mb-2">Weekly Progress</h3>
              <p className="text-slate-400">Coming soon...</p>
            </div>
          </div>
        </div>
      </div>

      {/* Final CTA Section */}
      <div className="relative z-10 py-16">
        <div className="max-w-4xl mx-auto px-4 text-center">
          <div className="bg-gradient-to-r from-purple-500/20 via-blue-500/15 to-indigo-500/20 backdrop-blur-xl rounded-3xl p-8 md:p-12 border border-purple-500/30 shadow-2xl">
            <h3 className="text-2xl md:text-3xl font-bold text-white mb-6">
              Ready to Deepen Your Prayer Life?
            </h3>
            <p className="text-slate-300 text-lg mb-8 max-w-2xl mx-auto">
              Join thousands of believers who are transforming their spiritual lives through intentional prayer and reflection.
            </p>
            <button
              onClick={() => setShowPrayerTimer(true)}
              className="group relative px-12 py-6 bg-gradient-to-r from-yellow-400 via-amber-400 to-yellow-500 rounded-3xl font-black text-2xl text-black shadow-2xl shadow-yellow-400/40 hover:shadow-yellow-400/60 transform hover:scale-110 transition-all duration-500 overflow-hidden"
            >
              <div className="absolute inset-0 bg-gradient-to-r from-amber-300 to-yellow-300 opacity-0 group-hover:opacity-100 transition-opacity duration-500"></div>
              <div className="relative flex items-center space-x-4">
                <span className="text-3xl animate-bounce">üïäÔ∏è</span>
                <span className="tracking-wide">Start Your Sacred Prayer Journey</span>
                <svg className="w-7 h-7 group-hover:translate-x-2 transition-transform duration-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={3} d="M13 7l5 5m0 0l-5 5m5-5H6" />
                </svg>
              </div>
              <div className="absolute inset-0 rounded-3xl border-2 border-yellow-300/50 group-hover:border-yellow-200/80 transition-colors duration-500"></div>
            </button>
          </div>
        </div>
      </div>
    </div>

      {/* Prayer Timer Modal - Fully Responsive */}
      {showPrayerTimer && (
        <div className="fixed inset-0 bg-black/90 backdrop-blur-md z-50 p-4 flex items-center justify-center">
          <div className="bg-white/10 backdrop-blur-2xl rounded-2xl border border-white/20 shadow-2xl w-full max-w-sm mx-4 p-4">
            <div className="text-center">
              <h2 className="text-xl font-bold text-white mb-4">Prayer Timer</h2>
              <p className="text-slate-300 mb-4">Modal is working!</p>
              <button
                onClick={() => setShowPrayerTimer(false)}
                className="px-4 py-2 bg-amber-500 text-white rounded-lg hover:bg-amber-600 transition-colors"
              >
                Close
              </button>
            </div>
          </div>
        </div>
      )}
    </div>
  )
}
                <p className="text-slate-400 text-xs sm:text-sm mb-3 sm:mb-4">Take your time, God's listening...</p>

                {/* Prayer Streak & Divine Presence - Mobile Responsive */}
                <div className="flex flex-col sm:flex-row items-center sm:justify-between gap-3 sm:gap-0 mb-4">
                  <div className="text-center flex-1">
                    <div className="text-amber-400 text-xs sm:text-sm font-semibold">Your Prayer Streak</div>
                    <div className="text-white text-base sm:text-lg font-bold">Building Spiritual Strength</div>
                  </div>
                  <div className="hidden sm:block w-px h-8 bg-gradient-to-b from-amber-400/50 to-yellow-400/50"></div>
                  <div className="text-center flex-1">
                    <div className="text-blue-400 text-xs sm:text-sm font-semibold">Divine Presence</div>
                    <div className="text-white text-base sm:text-lg font-bold">God is with you now</div>
                  </div>
                </div>
              </div>
            </div>

            {/* Scrollable Content */}
            <div className="relative z-10 overflow-y-auto max-h-[calc(85vh-120px)] md:max-h-[calc(80vh-140px)] p-4 sm:p-6 md:p-8 pt-0">
              {/* Prayer Milestones - Mobile Responsive */}
              <div className="bg-gradient-to-r from-amber-400/10 to-yellow-400/10 rounded-xl p-3 sm:p-4 border border-amber-400/20 mb-4">
                  <div className="text-center mb-2">
                    <div className="text-amber-300 text-xs sm:text-sm font-semibold">üéØ Prayer Milestones</div>
                  </div>
                  <div className="flex flex-wrap justify-center gap-2 sm:gap-4">
                    {prayerProgress.currentStreak >= 7 && (
                      <div className="bg-gradient-to-r from-amber-400 to-yellow-400 text-black px-2 sm:px-3 py-1 rounded-full text-xs font-bold">
                        üõ°Ô∏è 7-Day Warrior
                      </div>
                    )}
                    {prayerProgress.daysThisMonth >= 15 && (
                      <div className="bg-gradient-to-r from-purple-400 to-pink-400 text-white px-2 sm:px-3 py-1 rounded-full text-xs font-bold">
                        üëë Monthly Faithful
                      </div>
                    )}
                    {prayerProgress.currentStreak >= 30 && (
                      <div className="bg-gradient-to-r from-green-400 to-emerald-400 text-white px-2 sm:px-3 py-1 rounded-full text-xs font-bold">
                        ‚ú® Champion
                      </div>
                    )}
                  </div>
                </div>

                {/* Progress Towards Next Milestone */}
                <div className="bg-gradient-to-r from-indigo-400/10 to-purple-400/10 rounded-xl p-4 border border-indigo-400/20">
                  <div className="text-center mb-3">
                    <div className="text-indigo-300 text-sm font-semibold">üöÄ Next Achievement</div>
                  </div>
                  <div className="space-y-2">
                    {prayerProgress.currentStreak < 7 && (
                      <div>
                        <div className="flex justify-between text-xs text-slate-300 mb-1">
                          <span>7-Day Prayer Warrior</span>
                          <span>{prayerProgress.currentStreak}/7 days</span>
                        </div>
                        <div className="w-full bg-slate-600 rounded-full h-2">
                          <div
                            className="bg-gradient-to-r from-indigo-400 to-purple-400 h-2 rounded-full transition-all duration-500"
                            style={{ width: `${(prayerProgress.currentStreak / 7) * 100}%` }}
                          ></div>
                        </div>
                      </div>
                    )}
                    {prayerProgress.currentStreak >= 7 && prayerProgress.currentStreak < 30 && (
                      <div>
                        <div className="flex justify-between text-xs text-slate-300 mb-1">
                          <span>Spiritual Champion</span>
                          <span>{prayerProgress.currentStreak}/30 days</span>
                        </div>
                        <div className="w-full bg-slate-600 rounded-full h-2">
                          <div
                            className="bg-gradient-to-r from-indigo-400 to-purple-400 h-2 rounded-full transition-all duration-500"
                            style={{ width: `${(prayerProgress.currentStreak / 30) * 100}%` }}
                          ></div>
                        </div>
                      </div>
                    )}
                    {prayerProgress.currentStreak >= 30 && (
                      <div className="text-center text-indigo-300 text-sm">
                        üéâ You've unlocked Spiritual Champion! Keep praying!
                      </div>
                    )}
                  </div>
                </div>
              </div>

              {/* Premium Timer Display - Mobile Responsive */}
              <div className="mb-6 sm:mb-8">
                <div className="relative">
                  <div className="text-5xl sm:text-6xl md:text-7xl lg:text-8xl font-black bg-gradient-to-r from-white via-amber-100 to-yellow-100 bg-clip-text text-transparent mb-2 drop-shadow-lg">
                    {Math.floor(timeRemaining / 60)}:{(timeRemaining % 60).toString().padStart(2, '0')}
                  </div>
                  <div className="absolute -inset-2 sm:-inset-4 bg-gradient-to-r from-amber-400/20 via-yellow-400/10 to-amber-400/20 rounded-2xl sm:rounded-3xl blur-xl -z-10"></div>
                </div>
                <div className="text-amber-300 text-base sm:text-lg font-bold tracking-wide">Minutes Remaining</div>
                <div className="text-slate-400 text-xs sm:text-sm mt-1">God's presence fills every moment</div>
              </div>

              {/* Enhanced Progress Bar - Mobile Responsive */}
              <div className="mb-6 sm:mb-8">
                <div className="w-full bg-gradient-to-r from-slate-700/60 to-slate-600/60 rounded-full h-3 sm:h-4 mb-2 sm:mb-3 border border-slate-500/30 shadow-inner">
                  <div
                    className="h-3 sm:h-4 bg-gradient-to-r from-amber-400 via-yellow-400 to-amber-500 rounded-full transition-all duration-1000 shadow-lg shadow-amber-400/30 border border-amber-300/50"
                    style={{width: `${((selectedMinutes * 60 - timeRemaining) / (selectedMinutes * 60)) * 100}%`}}
                  ></div>
                </div>
                <div className="text-slate-300 text-xs sm:text-sm font-medium">Session Progress</div>
                <div className="text-amber-400 text-xs mt-1">Walking with God, step by step</div>
              </div>

              {/* Scripture During Prayer - Mobile Responsive */}
              <div className="bg-slate-800/50 rounded-xl sm:rounded-2xl p-4 sm:p-6 mb-6 sm:mb-8 border border-slate-700/30">
                <div className="text-center mb-3 sm:mb-4">
                  <div className="inline-flex items-center px-2 sm:px-3 py-1 rounded-full bg-gradient-to-r from-amber-400/20 to-yellow-400/20 border border-amber-400/30 mb-2 sm:mb-3">
                    <span className="text-amber-300 text-xs font-medium">üìñ DIVINE WISDOM</span>
                  </div>
                  <h4 className="text-base sm:text-lg font-semibold text-white mb-2">Today's Sacred Scripture</h4>
                </div>

                <blockquote className="text-slate-200 italic text-xs sm:text-sm leading-relaxed mb-2 sm:mb-3">
                  "If we confess our sins, he is faithful and just and will forgive us our sins and purify us from all unrighteousness."
                </blockquote>
                <cite className="text-amber-400 text-xs font-semibold">- 1 John 1:9</cite>

                <div className="mt-3 sm:mt-4 pt-3 sm:pt-4 border-t border-slate-700/30">
                  <div className="flex items-center justify-center space-x-2 text-slate-400 mb-2">
                    <span className="text-xs sm:text-sm">üí≠</span>
                    <span className="text-xs font-medium">Spiritual Insight:</span>
                  </div>
                  <p className="text-slate-300 text-xs italic text-center">
                    "The pleasures of the world are deceitful; they promise more than they give." - Jonathan Edwards
                  </p>
                </div>
              </div>

              {/* Achievement Orbs - Gamification - Mobile Responsive */}
              <div className="bg-gradient-to-r from-emerald-400/10 to-teal-400/10 rounded-xl p-3 sm:p-4 border border-emerald-400/20 mb-4 sm:mb-6">
                <div className="text-center mb-2 sm:mb-3">
                  <div className="text-emerald-300 text-xs sm:text-sm font-semibold">‚ú® Achievement Orbs</div>
                </div>
                <div className="grid grid-cols-4 gap-2 sm:gap-3">
                  <div className={`text-center p-1.5 sm:p-2 rounded-lg transition-all duration-300 ${
                    prayerProgress.currentStreak >= 1
                      ? 'bg-gradient-to-r from-emerald-400 to-teal-400 text-white shadow-lg'
                      : 'bg-slate-600/30 text-slate-500'
                  }`}>
                    <div className="text-base sm:text-lg mb-1">üå±</div>
                    <div className="text-xs font-semibold">Seed</div>
                  </div>
                  <div className={`text-center p-1.5 sm:p-2 rounded-lg transition-all duration-300 ${
                    prayerProgress.currentStreak >= 7
                      ? 'bg-gradient-to-r from-blue-400 to-cyan-400 text-white shadow-lg'
                      : 'bg-slate-600/30 text-slate-500'
                  }`}>
                    <div className="text-base sm:text-lg mb-1">üåø</div>
                    <div className="text-xs font-semibold">Growth</div>
                  </div>
                  <div className={`text-center p-1.5 sm:p-2 rounded-lg transition-all duration-300 ${
                    prayerProgress.currentStreak >= 14
                      ? 'bg-gradient-to-r from-purple-400 to-pink-400 text-white shadow-lg'
                      : 'bg-slate-600/30 text-slate-500'
                  }`}>
                    <div className="text-base sm:text-lg mb-1">‚ú®</div>
                    <div className="text-xs font-semibold">Light</div>
                  </div>
                  <div className={`text-center p-1.5 sm:p-2 rounded-lg transition-all duration-300 ${
                    prayerProgress.currentStreak >= 30
                      ? 'bg-gradient-to-r from-amber-400 to-yellow-400 text-black shadow-lg'
                      : 'bg-slate-600/30 text-slate-500'
                  }`}>
                    <div className="text-base sm:text-lg mb-1">üî•</div>
                    <div className="text-xs font-semibold">Flame</div>
                  </div>
                </div>
              </div>

              {/* Divine Encouragement - Mobile Responsive */}
              <div className="bg-gradient-to-r from-indigo-400/10 via-purple-400/10 to-pink-400/10 rounded-xl p-3 sm:p-4 border border-indigo-400/20 mb-4 sm:mb-6 relative overflow-hidden">
                {/* Floating particles */}
                <div className="absolute top-2 right-2 w-1 h-1 bg-indigo-400/60 rounded-full animate-ping"></div>
                <div className="absolute bottom-4 left-4 w-1.5 h-1.5 bg-purple-400/60 rounded-full animate-ping" style={{animationDelay: '1s'}}></div>

                <div className="text-center mb-2 sm:mb-3">
                  <div className="text-indigo-300 text-xs sm:text-sm font-semibold">üôè Divine Encouragement</div>
                  <div className="text-xs text-slate-400 mt-1">Feel God's presence in every moment</div>
                </div>
                <div className="grid grid-cols-2 gap-2 sm:gap-3">
                  <button className="group bg-gradient-to-r from-indigo-500/20 to-purple-500/20 hover:from-indigo-500/30 hover:to-purple-500/30 text-indigo-300 px-3 sm:px-4 py-2 sm:py-3 rounded-lg text-xs sm:text-sm font-semibold transition-all duration-500 flex items-center justify-center space-x-1 sm:space-x-2 border border-indigo-400/30 hover:border-indigo-400/50 hover:shadow-lg hover:shadow-indigo-500/20 transform hover:scale-105">
                    <span className="text-base sm:text-lg group-hover:animate-pulse">üíô</span>
                    <span>God is with you</span>
                  </button>
                  <button className="group bg-gradient-to-r from-purple-500/20 to-pink-500/20 hover:from-purple-500/30 hover:to-pink-500/30 text-purple-300 px-3 sm:px-4 py-2 sm:py-3 rounded-lg text-xs sm:text-sm font-semibold transition-all duration-500 flex items-center justify-center space-x-1 sm:space-x-2 border border-purple-400/30 hover:border-purple-400/50 hover:shadow-lg hover:shadow-purple-500/20 transform hover:scale-105">
                    <span className="text-base sm:text-lg group-hover:animate-bounce">üôå</span>
                    <span>You're heard</span>
                  </button>
                  <button className="group bg-gradient-to-r from-pink-500/20 to-rose-500/20 hover:from-pink-500/30 hover:to-rose-500/30 text-pink-300 px-3 sm:px-4 py-2 sm:py-3 rounded-lg text-xs sm:text-sm font-semibold transition-all duration-500 flex items-center justify-center space-x-1 sm:space-x-2 border border-pink-400/30 hover:border-pink-400/50 hover:shadow-lg hover:shadow-pink-500/20 transform hover:scale-105">
                    <span className="text-base sm:text-lg group-hover:animate-spin" style={{animationDuration: '2s'}}>‚ú®</span>
                    <span>Heaven celebrates</span>
                  </button>
                  <button className="group bg-gradient-to-r from-amber-500/20 to-yellow-500/20 hover:from-amber-500/30 hover:to-yellow-500/30 text-amber-300 px-3 sm:px-4 py-2 sm:py-3 rounded-lg text-xs sm:text-sm font-semibold transition-all duration-500 flex items-center justify-center space-x-1 sm:space-x-2 border border-amber-400/30 hover:border-amber-400/50 hover:shadow-lg hover:shadow-amber-500/20 transform hover:scale-105">
                    <span className="text-base sm:text-lg group-hover:scale-110 transition-transform duration-300">üî•</span>
                    <span>Share your faith</span>
                  </button>
                </div>
              </div>
            </div>

            {/* Premium Action Buttons - Mobile Responsive */}
              <div className="flex flex-col sm:flex-row space-y-3 sm:space-y-0 sm:space-x-4">
                <button
                  onClick={() => setIsTimerRunning(!isTimerRunning)}
                  className="flex-1 px-4 sm:px-6 py-3 sm:py-4 bg-gradient-to-r from-slate-700/60 to-slate-600/60 hover:from-slate-600/60 hover:to-slate-500/60 rounded-xl sm:rounded-2xl font-bold transition-all duration-500 flex items-center justify-center space-x-2 sm:space-x-3 border border-slate-500/40 hover:border-slate-400/60 shadow-lg shadow-slate-900/20 hover:shadow-slate-800/30 transform hover:scale-105"
                >
                  <span className="text-xl sm:text-2xl">{isTimerRunning ? '‚è∏Ô∏è' : '‚ñ∂Ô∏è'}</span>
                  <span className="text-slate-200 text-sm sm:text-base">{isTimerRunning ? 'Pause' : 'Resume'}</span>
                </button>
                <button
                  onClick={() => {
                    setShowPrayerTimer(false)
                    onNavigate?.('prayer')
                  }}
                  className="flex-1 px-4 sm:px-6 py-3 sm:py-4 bg-gradient-to-r from-amber-400 via-yellow-400 to-amber-500 hover:from-yellow-400 hover:via-amber-400 hover:to-yellow-500 text-black font-bold rounded-xl sm:rounded-2xl transition-all duration-500 transform hover:scale-105 shadow-lg shadow-amber-400/30 hover:shadow-amber-400/50 border border-amber-300/50 hover:border-amber-200/70"
                >
                  <span className="text-lg sm:text-xl">üïäÔ∏è</span>
                  <span className="ml-1 sm:ml-2 text-sm sm:text-base">Full Experience</span>
                </button>
              </div>
            </div>
          </div>
        </div>
      )}
    </div>
  )
}
